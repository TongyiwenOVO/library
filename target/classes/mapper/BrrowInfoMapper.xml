<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.BrrowInfoMapper">
  <resultMap id="BaseResultMap" type="com.entity.BrrowInfo">
    <id column="bro_id" jdbcType="INTEGER" property="broId" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="bookid" jdbcType="INTEGER" property="bookid" />
    <result column="lendtime" jdbcType="DATE" property="lendtime" />
    <result column="returntime" jdbcType="DATE" property="returntime" />
    <result column="applytime" jdbcType="INTEGER" property="applytime" />
    <result column="moeny" jdbcType="REAL" property="moeny" />
    <result column="status" jdbcType="INTEGER" property="status"/>
  </resultMap>
  <resultMap id="ResultMapWithAccountAndBook" type="com.entity.BrrowInfo">
    <id column="bro_id" jdbcType="INTEGER" property="broId" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="bookid" jdbcType="INTEGER" property="bookid" />
    <result column="lendtime" jdbcType="DATE" property="lendtime" />
    <result column="returntime" jdbcType="DATE" property="returntime" />
    <result column="applytime" jdbcType="INTEGER" property="applytime" />
    <result column="moeny" jdbcType="REAL" property="moeny" />
    <result column="status" jdbcType="INTEGER" property="status"/>
    <association property="book" javaType="com.entity.Book">
      <id column="book_id" jdbcType="INTEGER" property="bookId" />
      <result column="book_name" jdbcType="VARCHAR" property="bookName" />
      <result column="book_number" jdbcType="INTEGER" property="bookNumber" />
      <result column="book_typeid" jdbcType="INTEGER" property="bookTypeid" />
      <result column="authorid" jdbcType="INTEGER" property="authorid" />
      <result column="publisher" jdbcType="VARCHAR" property="publisher" />
      <result column="publishtime" jdbcType="DATE" property="publishtime" />
      <result column="book_photo" jdbcType="VARCHAR" property="bookPhoto" />
    </association>
    <association property="account" javaType="com.entity.Account">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="account" jdbcType="VARCHAR" property="account" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="role" jdbcType="INTEGER" property="role" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bro_id, userid, bookid, lendtime, returntime, applytime, moeny, status
  </sql>
  <sql id="AccountAndBook_List">
       *
  </sql>
  <select id="selectByprimaryKeyWithAccountAndBook" parameterType="java.lang.Integer" resultMap="ResultMapWithAccountAndBook">
    select
    <include refid="AccountAndBook_List" />
    from brrowinfo  left join book  on book_id=bookid left join account on id=userid
    where bro_id = #{broId,jdbcType=INTEGER}
  </select>
  <select id="selectByExampleWithAccountAndBookByAccount" parameterType="String" resultMap="ResultMapWithAccountAndBook">
    select
    <include refid="AccountAndBook_List" />
    from brrowinfo  left join book  on book_id=bookid left join account on id=userid
    where account=#{account}
    order by status desc
  </select>
  <select id="selectByExampleWithAccountAndBook" parameterType="com.entity.BrrowInfoExample" resultMap="ResultMapWithAccountAndBook">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="AccountAndBook_List" />
    from brrowinfo  left join book  on book_id=bookid left join account on id=userid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.entity.BrrowInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from brrowinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from brrowinfo
    where bro_id = #{broId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from brrowinfo
    where bro_id = #{broId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.entity.BrrowInfoExample">
    delete from brrowinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.entity.BrrowInfo">
    insert into brrowinfo (bro_id, userid, bookid,
      lendtime, returntime, applytime,
      moeny, status)
    values (#{broId,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{bookid,jdbcType=INTEGER},
      #{lendtime,jdbcType=DATE}, #{returntime,jdbcType=DATE}, #{applytime,jdbcType=INTEGER},
      #{moeny,jdbcType=REAL}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.BrrowInfo">
    insert into brrowinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="broId != null">
        bro_id,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="bookid != null">
        bookid,
      </if>
      <if test="lendtime != null">
        lendtime,
      </if>
      <if test="returntime != null">
        returntime,
      </if>
      <if test="applytime != null">
        applytime,
      </if>
      <if test="moeny != null">
        moeny,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="broId != null">
        #{broId,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="lendtime != null">
        #{lendtime,jdbcType=DATE},
      </if>
      <if test="returntime != null">
        #{returntime,jdbcType=DATE},
      </if>
      <if test="applytime != null">
        #{applytime,jdbcType=INTEGER},
      </if>
      <if test="moeny != null">
        #{moeny,jdbcType=REAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.entity.BrrowInfoExample" resultType="java.lang.Long">
    select count(*) from brrowinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update brrowinfo
    <set>
      <if test="record.broId != null">
        bro_id = #{record.broId,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.bookid != null">
        bookid = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.lendtime != null">
        lendtime = #{record.lendtime,jdbcType=DATE},
      </if>
      <if test="record.returntime != null">
        returntime = #{record.returntime,jdbcType=DATE},
      </if>
      <if test="record.applytime != null">
        applytime = #{record.applytime,jdbcType=INTEGER},
      </if>
      <if test="record.moeny != null">
        moeny = #{record.moeny,jdbcType=REAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update brrowinfo
    set bro_id = #{record.broId,jdbcType=INTEGER},
    userid = #{record.userid,jdbcType=INTEGER},
    bookid = #{record.bookid,jdbcType=INTEGER},
    lendtime = #{record.lendtime,jdbcType=DATE},
    returntime = #{record.returntime,jdbcType=DATE},
    applytime = #{record.applytime,jdbcType=INTEGER},
    moeny = #{record.moeny,jdbcType=REAL},
    status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.BrrowInfo">
    update brrowinfo
    <set>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null">
        bookid = #{bookid,jdbcType=INTEGER},
      </if>
      <if test="lendtime != null">
        lendtime = #{lendtime,jdbcType=DATE},
      </if>
      <if test="returntime != null">
        returntime = #{returntime,jdbcType=DATE},
      </if>
      <if test="applytime != null">
        applytime = #{applytime,jdbcType=INTEGER},
      </if>
      <if test="moeny != null">
        moeny = #{moeny,jdbcType=REAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where bro_id = #{broId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.BrrowInfo">
    update brrowinfo
    set userid = #{userid,jdbcType=INTEGER},
      bookid = #{bookid,jdbcType=INTEGER},
      lendtime = #{lendtime,jdbcType=DATE},
      returntime = #{returntime,jdbcType=DATE},
      applytime = #{applytime,jdbcType=INTEGER},
      moeny = #{moeny,jdbcType=REAL},
      status = #{status,jdbcType=INTEGER}
    where bro_id = #{broId,jdbcType=INTEGER}
  </update>
</mapper>